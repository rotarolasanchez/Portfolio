
name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  issues:
    types: [opened]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Usar la distribución de Temurin

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run Lint
        run: ./gradlew lint

      - name: Debug artifacts
        run: ls -R app/build/reports

      - name: Upload html test report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Usar la distribución de Temurin

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [unit-test]
    runs-on: ubuntu-latest # Cambia de macos-latest a ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Usar la distribución de Temurin

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck
          device: pixel_4 # Especifica un dispositivo compatible
          abi: arm64-v8a # Especifica una arquitectura compatible
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/

  static-code-analysis:
    needs: [ instrumentation-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Usar la distribución de Temurin

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: SonarCloud Scan
        run: ./gradlew app:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  package:
    needs: [static-code-analysis]
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Usar la distribución de Temurin

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Compress APK
        run: zip -r app-debug.zip app/build/outputs/apk/debug/app-debug.apk

      - name: Upload APK to Google Drive
        run: |
            curl -L -o gdrive https://github.com/prasmussen/gdrive/releases/download/2.1.0/gdrive-linux-x64
            chmod +x gdrive
            ./gdrive upload --refresh-token ${{ secrets.GDRIVE_REFRESH_TOKEN }} --parent <1hkMqnYBwdcF7rlE3aacsR7K7bvO3GbOB> app-debug.zip
          env:
            GDRIVE_CLIENT_ID: ${{ secrets.GDRIVE_CLIENT_ID }}
            GDRIVE_CLIENT_SECRET: ${{ secrets.GDRIVE_CLIENT_SECRET }}

      - name: Send APK download link via email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_APP_PASSWORD }}
          subject: APK Build
          body: The latest APK build is available for download [here](https://drive.google.com/uc?id=<1hkMqnYBwdcF7rlE3aacsR7K7bvO3GbOB>&export=download).
          to: rotarolasanchez@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}