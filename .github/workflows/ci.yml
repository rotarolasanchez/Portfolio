
name: CI
on:
  push:
    branches:
      - release/*
  pull_request:
    branches:
      - release/*
  workflow_dispatch:
  issues:
    types: [ opened ]

jobs:
  lint:
    if: contains(github.event.head_commit.message, 'Send QA')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Usar la distribuci贸n de Temurin

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run Lint
        run: ./gradlew lint

      - name: Debug artifacts
        run: ls -R app/build/reports

      - name: Upload html test report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [ lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Usar la distribuci贸n de Temurin

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

  instrumentation-test:
    needs: [ unit-test ]
    runs-on: ubuntu-latest # Cambia de macos-latest a ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Usar la distribuci贸n de Temurin

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck
          device: pixel_4 # Especifica un dispositivo compatible
          abi: arm64-v8a # Especifica una arquitectura compatible
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/
  sonarcloud:
    needs: [ instrumentation-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history to avoid shallow clone issues

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # Usar la distribuci贸n de Temurin

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build and run tests with coverage
        run: ./gradlew clean build jacocoTestReport

      - name: SonarCloud Scan
        run: ./gradlew app:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml

      - name: Check SonarQube Quality Gate
        run: |
          status=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "https://sonarqube.capibarafamily.online/api/qualitygates/project_status?projectKey=Portfolio_kotlin&branch=main" | jq -r '.projectStatus.status')
          if [ "$status" != "OK" ]; then
            echo "Quality gate failed: $status"
            exit 1
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  package:
    name: Generate APK
    needs: [ sonarcloud ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Compress APK
        run: zip -r app-debug.zip app/build/outputs/apk/debug/app-debug.apk

      - name: Upload a file to Google Drive
        uses: willo32/google-drive-upload-action@v1
        with:
          target: app-debug.zip
          credentials: ${{ secrets.GDRIVE_CREDENTIALS }}
          parent_folder_id: 1hkMqnYBwdcF7rlE3aacsR7K7bvO3GbOB

      - name: Send APK download link via email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_APP_PASSWORD }}
          subject: APK Build
          body: |
            The latest APK build is available for download in the shared folder: [Google Drive Folder](https://drive.google.com/drive/folders/1hkMqnYBwdcF7rlE3aacsR7K7bvO3GbOB?usp=sharing).
            Please use the following link to create a QA observation issue: [Create a new issue](https://github.com/rotarolasanchez/Portfolio/issues/new?assignees=&labels=qa&template=issue_template.md&title=%5BQA+Observation%5D)
          to: rotarolasanchez@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}
